 type Slide = {
    src: StaticImageData;
    alt: string;
    title: string;
    description: string;
    buttonText: string;
  };

  const slides: Slide[] = [
    {
      src: image1,
      alt: 'Image 1',
      title: 'What is Dyslexia?',
      description: 'Our system identifies learning disabilities early for timely intervention.',
      buttonText: 'Learn More',
    },
    {
      src: image2,
      alt: 'Image 2',
      title: 'AI-Driven Insights',
      description: 'Using machine learning to analyze key developmental indicators.',
      buttonText: 'Discover AI',
    },
    {
      src: image3,
      alt: 'Image 3',
      title: 'Real-Time Predictions',
      description: 'Real-time insights into a childâ€™s progress and growth.',
      buttonText: 'See Features',
    },
    {
      src: image4,
      alt: 'Image 4',
      title: 'Transforming Education',
      description: 'Ensuring every child gets the support they need to thrive.',
      buttonText: 'Get Started',
    },
  ];

  // Automatically go to the next slide every 3 seconds
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev === slides.length - 1 ? 0 : prev + 1));
    }, 5000); // Change slide every 3 seconds

    return () => clearInterval(interval); // Clear interval on component unmount
  }, [slides.length]);

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev === slides.length - 1 ? 0 : prev + 1));
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev === 0 ? slides.length - 1 : prev - 1));
  };
  return (
    <>
      <main className="flex flex-col items-center justify-center bg-white">
        <div className="relative w-full h-[60vh] flex items-center justify-center">
          <div className="relative w-full h-full">
            {slides.map((slide, index) => (
              <div
                key={index}
                className={`absolute inset-0 transition-opacity duration-1000 ${index === currentSlide ? 'opacity-100' : 'opacity-0'}`}
              >
                <Image
                  src={slide.src}
                  alt={slide.alt}
                  fill
                  className="object-cover"
                />
                {/* Overlay Content */}
                {index === currentSlide && (
                  <div className="absolute inset-0 bg-black bg-opacity-50 flex flex-col items-center justify-center text-white text-center px-4">
                    <h2 className="text-3xl font-bold mb-4">{slide.title}</h2>
                    <p className="text-lg mb-6">{slide.description}</p>
                    <button className="px-6 py-2 bg-teal-500 rounded-full hover:bg-teal-600 transition">
                      {slide.buttonText}
                    </button>
                  </div>
                )}
              </div>
            ))}
          </div>

          <button
            onClick={prevSlide}
            className="absolute left-6 bottom-1/2 transform translate-y-1/2 z-10 text-teal-500 hover:text-teal-600 focus:outline-none text-3xl"
          >
            &#9664;
          </button>

          <button
            onClick={nextSlide}
            className="absolute right-6 bottom-1/2 transform translate-y-1/2 z-10 text-teal-500 hover:text-teal-600 focus:outline-none text-3xl"
          >
            &#9654;
          </button>

          <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-4 z-10">
            {slides.map((_, index) => (
              <div
                key={index}
                className={`h-3 w-3 rounded-full ${currentSlide === index ? 'bg-primary-color' : 'bg-teal-900'}`}
              ></div>
            ))}
          </div>
        </div>
      </main>