"use client";

import React, { useEffect, useState } from "react";

interface User {
  _id: string;
  name: string;
  email: string;
  role: string;
  parentName?: string;
  childName?: string;
  childAge?: number;
  dyslexiaRisk?: string;
}

const GenerateReport = () => {
  const [users, setUsers] = useState<User[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // Fetch users with test results
  useEffect(() => {
    const fetchUsers = async () => {
      try {
        const res = await fetch("/api/admin/users");
        if (!res.ok) throw new Error("Failed to fetch users.");
        const data = await res.json();
        setUsers(data);
      } catch (err) {
        setError((err as Error).message);
      } finally {
        setIsLoading(false);
      }
    };

    fetchUsers();
  }, []);

  // Print user-specific report
  const handlePrint = (user: User) => {
    const printWindow = window.open("", "_blank", "width=800,height=600");
    if (printWindow) {
      printWindow.document.write(`
        <html>
          <head>
            <title>EarlyEdge Report</title>
            <style>
              body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                line-height: 1.6;
                margin: 30px;
                color: #333;
              }
              h1, h2 {
                text-align: center;
                margin-bottom: 15px;
              }
              h1 {
                font-size: 28px;
                color: #2c3e50;
              }
              h2 {
                font-size: 20px;
                color: #34495e;
              }
              .logo {
                display: block;
                margin: 0 auto 20px auto;
                max-width: 150px;
              }
              table {
                width: 100%;
                border-collapse: collapse;
                margin-top: 20px;
              }
              th, td {
                border: 1px solid #ddd;
                padding: 10px;
                text-align: left;
              }
              th {
                background-color: #f4f4f4;
                color: #495057;
              }
              tr:nth-child(even) {
                background-color: #f9f9f9;
              }
              tr:hover {
                background-color: #f1f1f1;
              }
              .footer {
                margin-top: 30px;
                text-align: center;
                font-size: 14px;
                color: #888;
              }
            </style>
          </head>
          <body>
            <img src="https://via.placeholder.com/150x75?text=EarlyEdge+Logo" alt="EarlyEdge Logo" class="logo" />
            <h1>EarlyEdge Report</h1>
            <h2>User Information</h2>
            <table>
              <tr><th>ID</th><td>${user._id}</td></tr>
              <tr><th>Name</th><td>${user.name}</td></tr>
              <tr><th>Email</th><td>${user.email}</td></tr>
              <tr><th>Role</th><td>${user.role}</td></tr>
              <tr><th>Parent Name</th><td>${user.parentName || "N/A"}</td></tr>
              <tr><th>Child Name</th><td>${user.childName || "N/A"}</td></tr>
              <tr><th>Child Age</th><td>${user.childAge || "N/A"}</td></tr>
              <tr><th>Dyslexia Risk</th><td>${user.dyslexiaRisk || "N/A"}</td></tr>
            </table>
            <div class="footer">
              <p>Generated by EarlyEdge System</p>
            </div>
          </body>
        </html>
      `);
      printWindow.document.close();
      printWindow.print();
    }
  };

  if (isLoading) {
    return <div className="text-center text-xl py-4">Loading users...</div>;
  }

  if (error) {
    return <div className="text-center text-red-600 py-4">{error}</div>;
  }

  return (
    <div className="p-6">
      <h1 className="text-3xl font-bold mb-6 text-center">Reports Management</h1>
      <div className="bg-white shadow rounded-lg overflow-hidden">
        <table className="w-full text-left border border-gray-300">
          <thead className="bg-gray-100">
            <tr>
              <th className="px-4 py-2 text-sm font-medium text-gray-600 border border-gray-300">Name</th>
              <th className="px-4 py-2 text-sm font-medium text-gray-600 border border-gray-300">Email</th>
              <th className="px-4 py-2 text-sm font-medium text-gray-600 border border-gray-300">Role</th>
              <th className="px-4 py-2 text-sm font-medium text-gray-600 border border-gray-300">Dyslexia Risk</th>
              <th className="px-4 py-2 text-sm font-medium text-gray-600 border border-gray-300 text-center">Actions</th>
            </tr>
          </thead>
          <tbody>
            {users.map((user, idx) => (
              <tr
                key={user._id}
                className={`${idx % 2 === 0 ? "bg-white" : "bg-gray-50"} hover:bg-gray-100`}
              >
                <td className="px-4 py-2 text-sm text-gray-800 border border-gray-300">{user.name}</td>
                <td className="px-4 py-2 text-sm text-gray-800 border border-gray-300">{user.email}</td>
                <td className="px-4 py-2 text-sm text-gray-800 border border-gray-300">{user.role}</td>
                <td className="px-4 py-2 text-sm text-gray-800 border border-gray-300">{user.dyslexiaRisk || "N/A"}</td>
                <td className="px-4 py-2 text-center border border-gray-300">
                  <button
                    onClick={() => handlePrint(user)}
                    className="text-sm px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition"
                  >
                    Print
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default GenerateReport;
