"use client";

import { useEffect, useState } from "react";
import { Table, TableHeader, TableColumn, TableBody, TableRow, TableCell, getKeyValue } from "@nextui-org/react";

interface User {
  _id: string;
  name: string;
  email: string;
  role: string;
  parentName?: string;
  childName?: string;
  childAge?: number;
  dyslexiaRisk?: string;
}

const GenerateReport = () => {
  const [users, setUsers] = useState<User[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // Fetch users with test results
  useEffect(() => {
    const fetchUsers = async () => {
      try {
        const res = await fetch("/api/admin/users");
        if (!res.ok) throw new Error("Failed to fetch users.");
        const data = await res.json();
        setUsers(data);
      } catch (err) {
        setError((err as Error).message);
      } finally {
        setIsLoading(false);
      }
    };

    fetchUsers();
  }, []);

  // Print user-specific report function
  const handlePrint = (user: User) => {
    const printWindow = window.open("", "_blank", "width=800,height=600");
    if (printWindow) {
      printWindow.document.write(`
        <html>
          <head>
            <title>EarlyEdge Report</title>
            <style>
              body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                line-height: 1.6;
                margin: 30px;
                color: #333;
              }
              h1, h2 {
                text-align: center;
                margin-bottom: 15px;
              }
              h1 {
                font-size: 28px;
                color: #2c3e50;
              }
              h2 {
                font-size: 20px;
                color: #34495e;
              }
              .logo {
                display: block;
                margin: 0 auto 20px auto;
                max-width: 150px;
              }
              table {
                width: 100%;
                border-collapse: collapse;
                margin-top: 20px;
              }
              th, td {
                border: 1px solid #ddd;
                padding: 10px;
                text-align: left;
              }
              th {
                background-color: #f4f4f4;
                color: #495057;
              }
              tr:nth-child(even) {
                background-color: #f9f9f9;
              }
              tr:hover {
                background-color: #f1f1f1;
              }
              .footer {
                margin-top: 30px;
                text-align: center;
                font-size: 14px;
                color: #888;
              }
            </style>
          </head>
          <body>
            <img src="https://via.placeholder.com/150x75?text=EarlyEdge+Logo" alt="EarlyEdge Logo" class="logo" />
            <h1>EarlyEdge Report</h1>
            <h2>User Information</h2>
            <table>
              <tr><th>ID</th><td>${user._id}</td></tr>
              <tr><th>Name</th><td>${user.name}</td></tr>
              <tr><th>Email</th><td>${user.email}</td></tr>
              <tr><th>Role</th><td>${user.role}</td></tr>
              <tr><th>Parent Name</th><td>${user.parentName || "N/A"}</td></tr>
              <tr><th>Child Name</th><td>${user.childName || "N/A"}</td></tr>
              <tr><th>Child Age</th><td>${user.childAge || "N/A"}</td></tr>
              <tr><th>Dyslexia Risk</th><td>${user.dyslexiaRisk || "N/A"}</td></tr>
            </table>
            <div class="footer">
              <p>Generated by EarlyEdge System</p>
            </div>
          </body>
        </html>
      `);
      printWindow.document.close();
      printWindow.print();
    }
  };

  if (isLoading) {
    return <div style={{ textAlign: "center", padding: "50px" }}>Loading...</div>;
  }

  if (error) {
    return (
      <div style={{ textAlign: "center", color: "red", padding: "50px" }}>
        {error}
      </div>
    );
  }

  const columns = [
    { key: "name", label: "Name" },
    { key: "email", label: "Email" },
    { key: "role", label: "Role" },
    { key: "dyslexiaRisk", label: "Dyslexia Risk" },
    { key: "actions", label: "Actions" },
  ];

  return (
    <div style={{ padding: "20px" }}>
      <h1 style={{ textAlign: "center" }}>Reports Management</h1>
      <Table aria-label="User reports table">
        <TableHeader columns={columns}>
          {(column) => <TableColumn key={column.key}>{column.label}</TableColumn>}
        </TableHeader>
        <TableBody items={users}>
          {(user) => (
            <TableRow key={user._id}>
              {(columnKey) => (
                <TableCell>
                  {columnKey === "actions" ? (
                    <button onClick={() => handlePrint(user)}>Print</button>
                  ) : (
                    getKeyValue(user, columnKey)
                  )}
                </TableCell>
              )}
            </TableRow>
          )}
        </TableBody>
      </Table>
    </div>
  );
};

export default GenerateReport;
